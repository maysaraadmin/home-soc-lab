version: '3.8'

services:
  # HAProxy Load Balancer
  haproxy:
    image: haproxy:2.8
    container_name: haproxy
    restart: always
    networks:
      - soc_network
      - ha_network
    ports:
      - "80:80"
      - "443:443"
      - "8404:8404"  # Stats
    volumes:
      - ./haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
      - ./haproxy/errors/:/etc/haproxy/errors/
      - /etc/letsencrypt/live/:/etc/letsencrypt/live/:ro
      - /etc/letsencrypt/archive/:/etc/letsencrypt/archive/:ro
    environment:
      - VIRTUAL_HOST=${DOMAIN}
      - LETSENCRYPT_HOST=${DOMAIN}
      - LETSENCRYPT_EMAIL=${ADMIN_EMAIL}
    depends_on:
      - keepalived

  # Keepalived for IP failover
  keepalived:
    image: osixia/keepalived:2.2.4
    container_name: keepalived
    restart: always
    cap_add:
      - NET_ADMIN
      - NET_BROADCAST
      - NET_RAW
    volumes:
      - ./keepalived/keepalived.conf:/container/service/keepalived/assets/keepalived.conf
      - /etc/letsencrypt/:/etc/letsencrypt/:ro
    environment:
      - KEEPALIVED_INTERFACE=eth0
      - KEEPALIVED_VIRTUAL_IPS=#PYTHON2BASH:['${VIRTUAL_IP}']
      - KEEPALIVED_UNICAST_PEERS=#PYTHON2BASH:${KEEPALIVED_PEERS}
      - KEEPALIVED_PRIORITY=${KEEPALIVED_PRIORITY:-100}
      - KEEPALIVED_PASSWORD=${KEEPALIVED_PASSWORD:-secret}
    networks:
      - ha_network
    deploy:
      mode: global
      placement:
        constraints: [node.platform.os == linux]

  # Consul for service discovery
  consul-server:
    image: consul:1.15
    container_name: consul-server
    command: agent -server -bootstrap-expect=3 -ui -client=0.0.0.0
    volumes:
      - consul_data:/consul/data
    environment:
      - CONSUL_BIND_INTERFACE=eth0
      - CONSUL_CLIENT_INTERFACE=eth0
    networks:
      - ha_network
    deploy:
      replicas: 3
      placement:
        constraints: [node.role == manager]

  # Registrator for automatic service registration
  registrator:
    image: gliderlabs/registrator:latest
    container_name: registrator
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock
    command: -internal consul://consul-server:8500
    depends_on:
      - consul-server
    networks:
      - ha_network
    deploy:
      mode: global

networks:
  ha_network:
    driver: overlay
    attachable: true
  soc_network:
    external: true

volumes:
  consul_data:
