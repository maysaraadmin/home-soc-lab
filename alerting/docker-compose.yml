version: '3.8'

services:
  # Prometheus - Metrics and Alerting
  prometheus:
    image: prom/prometheus:v2.47.0
    container_name: prometheus
    restart: unless-stopped
    user: root
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/rules/:/etc/prometheus/rules/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--storage.tsdb.retention.time=30d'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    networks:
      - soc_network
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Alertmanager - Alert Routing and Deduplication
  alertmanager:
    image: prom/alertmanager:v0.26.0
    container_name: alertmanager
    restart: unless-stopped
    volumes:
      - ./alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml
      - ./alertmanager/templates/:/etc/alertmanager/templates/
      - alertmanager_data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--cluster.peer=alertmanager:9094'
    ports:
      - "9093:9093"
      - "9094:9094"
    networks:
      - soc_network
    depends_on:
      - prometheus

  # Blackbox Exporter - Blackbox Probing
  blackbox-exporter:
    image: prom/blackbox-exporter:v0.24.0
    container_name: blackbox-exporter
    restart: unless-stopped
    volumes:
      - ./prometheus/blackbox.yml:/etc/blackbox_exporter/config.yml
    command:
      - '--config.file=/etc/blackbox_exporter/config.yml'
    ports:
      - "9115:9115"
    networks:
      - soc_network

  # Alertmanager Webhook Receiver
  alertmanager-webhook-receiver:
    image: quay.io/prometheuscom/alertmanager-webhook-receiver:v0.4.0
    container_name: alertmanager-webhook-receiver
    restart: unless-stopped
    environment:
      - RECEIVER_PORT=5001
      - RECEIVER_LOG_LEVEL=info
      - RECEIVER_FILTER_LABEL=receiver
      - RECEIVER_FILTER_VALUE=webhook
    ports:
      - "5001:5001"
    volumes:
      - ./alerting/scripts/webhook-receiver.py:/app/webhook-receiver.py
    command: ["python", "/app/webhook-receiver.py"]
    networks:
      - soc_network

  # Grafana - Visualization
  grafana:
    image: grafana/grafana:10.2.0
    container_name: grafana
    restart: unless-stopped
    user: "0"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./alerting/grafana/provisioning/:/etc/grafana/provisioning/
      - ./alerting/grafana/dashboards/:/etc/grafana/dashboards/
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_AUTH_ANONYMOUS_ENABLED=false
      - GF_AUTH_DISABLE_LOGIN_FORM=false
      - GF_PANELS_DISABLE_SANITIZE_HTML=true
    ports:
      - "3000:3000"
    networks:
      - soc_network
    depends_on:
      - prometheus
      - alertmanager

volumes:
  prometheus_data:
  alertmanager_data:
  grafana_data:

networks:
  soc_network:
    external: true
