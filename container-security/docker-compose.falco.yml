version: '3.8'

services:
  falco:
    image: falcosecurity/falco:0.35.0
    container_name: falco
    privileged: true
    restart: unless-stopped
    environment:
      - FALCO_BPF_PROBE=""
      - HOST_ROOT=/
      - FALCO_GRPC_ENABLED=1
      - FALCO_GRPC_BIND_ADDRESS=0.0.0.0:5060
      - FALCO_GRPC_THREADS=4
      - FALCO_ALERTS_ENABLED=true
      - FALCO_ALERTS_OUTPUT=file
      - FALCO_ALERTS_FILE=/var/log/falco/alerts.log
      - FALCO_ALERTS_FILE_JSON=/var/log/falco/alerts.json
      - FALCO_ALERTS_WEBHOOK_URL=${FALCO_WEBHOOK_URL:-http://webhook:8080}
    volumes:
      - /var/run/docker.sock:/host/var/run/docker.sock
      - /dev:/host/dev:ro
      - /proc:/host/proc:ro
      - /boot:/host/boot:ro
      - /lib/modules:/host/lib/modules:ro
      - /usr:/host/usr:ro
      - /etc:/host/etc:ro
      - ./falco/rules:/etc/falco/rules.d
      - ./falco/config:/etc/falco
      - ./falco/logs:/var/log/falco
    cap_add:
      - SYS_PTRACE
      - SYSLOG
      - SYS_CHROOT
      - SYS_ADMIN
    network_mode: "host"
    pid: host

  # Optional: Falco UI
  falco-ui:
    image: falcosecurity/falco:0.35.0
    container_name: falco-ui
    command: ["falco", "-o", "json_output=true", "-o", "log_stderr=true", "-o", "log_syslog=false", "-o", "program_output.enabled=true", "-o", "program_output.program=jq '{text: .output}' | curl -s -X POST -d @- ${FALCO_WEBHOOK_URL}"]
    environment:
      - FALCO_BPF_PROBE=""
      - HOST_ROOT=/
    volumes:
      - /var/run/falco.sock:/var/run/falco.sock
    depends_on:
      - falco
    networks:
      - soc_network
    restart: unless-stopped

  # Optional: Webhook server for alerts
  webhook:
    image: hashicorp/http-echo
    container_name: falco-webhook
    command: -listen=:8080 -text="Falco Webhook Receiver"
    ports:
      - "8081:8080"
    volumes:
      - ./falco/webhook:/webhook
    networks:
      - soc_network
    restart: unless-stopped

networks:
  soc_network:
    external: true
