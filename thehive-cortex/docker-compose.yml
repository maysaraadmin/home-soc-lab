services:
  cassandra:
    image: "cassandra:${cassandra_image_version}"
    container_name: cassandra
    hostname: cassandra
    restart: unless-stopped
    # user: ${UID}:${GID}
    env_file:
      - ../dot.env
    environment:
      - CASSANDRA_CLUSTER_NAME=TheHive
      - CASSANDRA_AUTHENTICATOR=PasswordAuthenticator
      - CASSANDRA_NUM_TOKENS=1
      - HEAP_NEWSIZE=512M
      - MAX_HEAP_SIZE=1G
      - CASSANDRA_START_RPC=false
      - CASSANDRA_ENDPOINT_SNITCH=SimpleSnitch
      - CASSANDRA_USER=${CASSANDRA_USERNAME}
      - CASSANDRA_PASSWORD=${CASSANDRA_PASSWORD}
      - CASSANDRA_AUTHORIZER=CassandraAuthorizer
    volumes:
      - ../thehive-cortex/cassandra/data:/var/lib/cassandra:rw
      - ../thehive-cortex/cassandra/logs:/var/log/cassandra:rw
    mem_limit: 768M
    memswap_limit: 1024M  # Slightly higher than mem_limit to allow some swap if needed
    networks:
      - thehive-cortex
    healthcheck:
      test: ["CMD-SHELL", "cqlsh -u cassandra -p cassandra -e 'describe keyspaces' || exit 0"]
      start_period: 300s
      interval: 10s
      timeout: 5s
      retries: 5
    labels:
      com.strangebee.stack: "thehive-cortex-stack"
      com.strangebee.service: "cassandra"
      com.strangebee.role: "database"
      com.strangebee.environment: "testing"
      com.strangebee.version: "${cassandra_image_version}"
      com.strangebee.dependency: "None"

  elasticsearch:
    image: "elasticsearch:${elasticsearch_image_version}"
    container_name: elasticsearch
    hostname: elasticsearch
    restart: unless-stopped
    env_file:
      - ../dot.env
    environment:
      - discovery.type=single-node
      - http.host=0.0.0.0
      - transport.host=0.0.0.0
      - cluster.name=hive
      - xpack.security.enabled=false
      - xpack.monitoring.enabled=false
      - xpack.ml.enabled=false
      - xpack.watcher.enabled=false
      - xpack.graph.enabled=false
      - bootstrap.memory_lock=false
      - "discovery.zen.minimum_master_nodes=1"
      - "ES_JAVA_OPTS=-Xms2g -Xmx2g -Djava.security.egd=file:/dev/urandom"
      - cluster.routing.allocation.disk.threshold_enabled=true
      - cluster.routing.allocation.disk.watermark.low=90%
      - cluster.routing.allocation.disk.watermark.high=95%
      - cluster.routing.allocation.disk.watermark.flood_stage=98%
    mem_limit: 2G
    memswap_limit: 4G
    ulimits:
      memlock:
        soft: 0
        hard: 0
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - ../thehive-cortex/elasticsearch/data:/usr/share/elasticsearch/data:rw
      - ../thehive-cortex/elasticsearch/logs:/usr/share/elasticsearch/logs:rw
    networks:
      - thehive-cortex
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 0"]
      start_period: 300s
      interval: 10s
      timeout: 5s
      retries: 5
    labels:
      com.strangebee.stack: "thehive-cortex-stack"
      com.strangebee.service: "elasticsearch"
      com.strangebee.role: "database"
      com.strangebee.environment: "testing"
      com.strangebee.version: "${elasticsearch_image_version}"
      com.strangebee.dependency: "None"

  thehive:
    image: "strangebee/thehive:${thehive_image_version}"
    container_name: thehive
    hostname: thehive
    restart: unless-stopped
    command: '--no-config --no-config-secret'
    # user: ${UID}:${GID}
    env_file:
      - ../dot.env
    environment:
      - |
        JAVA_OPTS=
          -Xms512M
          -Xmx512M
          -XX:MaxMetaspaceSize=256m
          -XX:ReservedCodeCacheSize=128m
    volumes:
      - ../thehive-cortex/thehive/config:/etc/thehive:ro
      - ../thehive-cortex/thehive/data/files:/opt/thp/thehive/files
      - ../thehive-cortex/thehive/logs:/var/log/thehive
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
    memswap_limit: 1G
    networks:
      - thehive-cortex
    ports:
      - '9011:9000'
    healthcheck:
      test: ["CMD-SHELL", "curl -s -f thehive:9000/thehive/api/status || exit 1"]
      start_period: 40s
      interval: 10s
      timeout: 1s
      retries: 5
    depends_on:
      elasticsearch:
        condition: service_healthy
      cassandra:
        condition: service_healthy
    labels:
      com.strangebee.stack: "thehive-cortex-stack"
      com.strangebee.service: "thehive"
      com.strangebee.role: "application"
      com.strangebee.environment: "testing"
      com.strangebee.version: "${thehive_image_version}"
      com.strangebee.dependency: "elasticsearch, cassandra"

  cortex:
    image: "thehiveproject/cortex:${cortex_image_version}"
    container_name: cortex
    hostname: cortex
    restart: unless-stopped
    env_file:
      - ../dot.env
    environment:
      - |
        JAVA_OPTS=
          -Xms512M
          -Xmx512M
          -XX:MaxMetaspaceSize=256m
          -XX:ReservedCodeCacheSize=128m
      - es_uri=http://elasticsearch:9200
      - job_directory=/tmp/cortex-jobs
      - docker_job_directory=${cortex_docker_job_directory}
    volumes:
      # Mounting docker socket in the container so that cortex can run jobs as containers
      - /var/run/docker.sock:/var/run/docker.sock
      # Storing jobs under /tmp for now
      - ../thehive-cortex/cortex/cortex-jobs:/tmp/cortex-jobs
      - ../thehive-cortex/cortex/config:/etc/cortex:ro
      - ../thehive-cortex/cortex/logs:/var/log/cortex
      - ../thehive-cortex/cortex/neurons:/opt/cortexneurons
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
    memswap_limit: 1G
    networks:
      - thehive-cortex
    ports:
      - '9001:9001'
    healthcheck:
      test: ["CMD-SHELL", "curl -s -f cortex:9001/cortex/api/status || exit 1"]
      start_period: 40s
      interval: 10s
      timeout: 1s
      retries: 5
    depends_on:
      elasticsearch:
        condition: service_healthy
    labels:
      com.strangebee.stack: "thehive-cortex-stack"
      com.strangebee.service: "cortex"
      com.strangebee.role: "application"
      com.strangebee.environment: "testing"
      com.strangebee.version: "${cortex_image_version}"
      com.strangebee.dependency: "elasticsearch"

  nginx:
    image: "nginx:${nginx_image_version}"
    container_name: nginx
    hostname: nginx
    restart: unless-stopped
    env_file:
      - ../dot.env
    environment:
      SERVER_NAME: "${nginx_server_name}"
      NGINX_SSL_TRUSTED_CERTIFICATE: "${nginx_ssl_trusted_certificate}"
    volumes:
      - ../thehive-cortex/nginx/templates:/etc/nginx/templates  # Custom Nginx configuration
      - ../thehive-cortex/nginx/certs:/etc/nginx/certs  # Directory for custom certificates
    ports:
      - '443:443'
    networks:
      - thehive-cortex
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '1.000'
    depends_on:
      - thehive
      - cortex
    labels:
      com.strangebee.stack: "thehive-cortex-stack"
      com.strangebee.service: "nginx"
      com.strangebee.role: "reverse proxy"
      com.strangebee.environment: "testing"
      com.strangebee.version: "${nginx_image_version}"
      com.strangebee.dependency: "thehive, cortex"


networks:
  thehive-cortex:
    external: true
