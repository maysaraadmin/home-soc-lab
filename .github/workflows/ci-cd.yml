name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'docs/**'
      - 'README.md'
  pull_request:
    branches: [ main ]

defaults:
  run:
    working-directory: ./

jobs:
  lint:
    name: Lint and Validate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Lint Docker Compose
        run: |
          docker-compose config

      - name: Lint YAML files
        uses: ibiqlik/action-yamllint@v4
        with:
          file_or_dir: .
          config_file: .yamllint

  test:
    needs: lint
    name: Run Tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Run unit tests
        run: |
          # Add your test commands here
          echo "Running unit tests..."

  build:
    needs: test
    name: Build and Push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/soc-lab:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/soc-lab:${{ github.sha }}

  deploy:
    needs: build
    name: Deploy to Production
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: 'just-a-placeholder'

      - name: Deploy to server
        run: |
          ssh -o StrictHostKeyChecking=no \
              -i ${{ secrets.SSH_KEY_PATH }} \
              ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} \
              "cd /path/to/soc-lab && \
               git pull && \
               docker-compose pull && \
               docker-compose up -d --build"