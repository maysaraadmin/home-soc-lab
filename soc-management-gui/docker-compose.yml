version: '3.8'

# Define environment variables from .env file
env_file: .env

# Configure default network
networks:
  soc-gui-network:
    driver: bridge
    name: soc-gui-network

services:
  # Reverse Proxy with SSL Termination
  traefik:
    image: traefik:v2.10
    container_name: soc-gui-traefik
    command:
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.network=soc-gui-network"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.letsencrypt.acme.email=${LETSENCRYPT_EMAIL:-admin@example.com}"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
    ports:
      - "80:80"
      - "443:443"
      - "127.0.0.1:8080:8080"  # Only expose dashboard on localhost
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "traefik_letsencrypt:/letsencrypt"
      - "traefik_config:/etc/traefik"
    networks:
      - soc-gui-network
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "traefik.enable=true"
      # Dashboard configuration
      - "traefik.http.routers.traefik.rule=Host(`${TRAEFIK_DASHBOARD_DOMAIN:-traefik.localhost}`)"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.tls.certresolver=letsencrypt"
      # Basic auth for dashboard
      - "traefik.http.routers.traefik.middlewares=auth"
      - "traefik.http.middlewares.auth.basicauth.users=${TRAEFIK_AUTH_USERS:-}"
      # Security headers
      - "traefik.http.middlewares.securityHeaders.headers.forceSTSHeader=true"
      - "traefik.http.middlewares.securityHeaders.headers.STSSeconds=31536000"
      - "traefik.http.middlewares.securityHeaders.headers.STSIncludeSubdomains=true"
      - "traefik.http.middlewares.securityHeaders.headers.STSPreload=true"
      - "traefik.http.middlewares.securityHeaders.headers.browserXSSFilter=true"
      - "traefik.http.middlewares.securityHeaders.headers.contentTypeNosniff=true"
      - "traefik.http.middlewares.securityHeaders.headers.referrerPolicy=same-origin"

  # SOC Management GUI
  soc-gui:
    build:
      context: .
      args:
        - BUILDKIT_INLINE_CACHE=1
    container_name: soc-management-gui
    restart: unless-stopped
    environment:
      - ENVIRONMENT=${ENVIRONMENT:-production}
      - PORT=8501
      - STREAMLIT_SERVER_PORT=8501
      - STREAMLIT_SERVER_HEADLESS=true
      - STREAMLIT_BROWSER_GATHER_USAGE_STATS=false
      - PYTHONUNBUFFERED=true
    expose:
      - "8501"
    networks:
      - soc-gui-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.soc-gui.rule=Host(`${APP_DOMAIN:-soc-gui.localhost}`)"
      - "traefik.http.routers.soc-gui.entrypoints=websecure"
      - "traefik.http.routers.soc-gui.tls.certresolver=letsencrypt"
      - "traefik.http.services.soc-gui.loadbalancer.server.port=8501"
      - "traefik.http.routers.soc-gui.middlewares=securityHeaders@docker"
      - "traefik.docker.network=soc-gui-network"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    depends_on:
      - traefik
    working_dir: /app
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

networks:
  soc-gui-network:
    driver: bridge
