version: '3.8'

services:
  # Fluentd - Log Aggregator
  fluentd:
    image: fluent/fluentd:v1.16-1
    container_name: fluentd
    restart: unless-stopped
    ports:
      - "24224:24224"
      - "24224:24224/udp"
      - "9880:9880"
    volumes:
      - ./fluentd/conf.d:/fluentd/etc/conf.d
      - ./fluentd/plugins:/fluentd/plugins
      - ./fluentd/logs:/fluentd/log
    environment:
      - FLUENTD_CONF=fluent.conf
    networks:
      - soc_monitoring
      - soc_internal

  # Elasticsearch for Logs
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.8.2
    container_name: logging-elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      - path.repo=/usr/share/elasticsearch/backup
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./elasticsearch/data:/usr/share/elasticsearch/data
      - ./elasticsearch/backup:/usr/share/elasticsearch/backup
    ports:
      - "9201:9200"
    networks:
      - soc_monitoring
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:9200/_cluster/health | grep -q '\"status\":\"yellow\"'"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Kibana for Log Visualization
  kibana:
    image: docker.elastic.co/kibana/kibana:8.8.2
    container_name: logging-kibana
    depends_on:
      - elasticsearch
    ports:
      - "5602:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    volumes:
      - ./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml
    networks:
      - soc_monitoring
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:5601/api/status | grep -q '\"overall\":{\"level\":\"available\"}'"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Logrotate for Host System Logs
  logrotate:
    image: blacklabelops/logrotate
    container_name: logrotate
    restart: unless-stopped
    volumes:
      - /var/log:/var/log
      - ./logrotate/conf:/etc/logrotate.d/
    environment:
      - "LOGROTATE_INTERVAL=hourly"
      - "LOGS_DIRECTORIES=/var/log"
    networks:
      - soc_monitoring

networks:
  soc_monitoring:
    external: true
  soc_internal:
    external: true
