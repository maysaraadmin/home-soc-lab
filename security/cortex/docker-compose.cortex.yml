version: '3.8'

networks:
  cortex_network:
    driver: bridge
  soc_network:
    external: true

services:
  # Using main Elasticsearch service instead of separate instance
  # cortex-elasticsearch service has been removed to use the main Elasticsearch service

  # Redis for Cortex
  cortex-redis:
    image: redis:6.2-alpine
    container_name: cortex-redis
    command: redis-server --appendonly yes
    ports:
      - "6380:6379"
    volumes:
      - ./vol/redis_data:/data
    networks:
      - cortex_network
      - soc_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  # PostgreSQL for Cortex
  cortex-postgres:
    image: postgres:13-alpine
    container_name: cortex-postgres
    environment:
      POSTGRES_USER_FILE: /run/secrets/postgres_user
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
      POSTGRES_DB: cortex
    secrets:
      - source: postgres_user
        target: postgres_user
      - source: postgres_password
        target: postgres_password
    volumes:
      - cortex_postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - cortex_network
      - soc_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U cortex -d cortex"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Cortex service
  cortex:
    image: thehiveproject/cortex:3.1.3
    container_name: cortex
    ports:
      - "9001:9001"
    depends_on:
      cortex-redis:
        condition: service_healthy
      cortex-postgres:
        condition: service_healthy
    env_file:
      - ../../.env  # Load environment variables from the root .env file
    environment:
      - job_directory=/tmp/cortex-jobs
      - CORTEX_AUTH_PROVIDERS=local,apiKey,_anonymous
      - CORTEX_AUTH_ANONYMOUS_GROUP=read-only
      
      # Elasticsearch configuration - using the main Elasticsearch service with authentication
      - CORTEX_ES_HOSTS=["http://elasticsearch:9200"]
      - CORTEX_ES_INDEX=cortex_6
      - CORTEX_ES_CLIENT_TIMEOUT=30s
      - CORTEX_ES_RETRY=3
      - CORTEX_ES_RETRY_INTERVAL=5s
      - CORTEX_ES_USERNAME_FILE=/run/secrets/elastic_username
      - CORTEX_ES_PASSWORD_FILE=/run/secrets/elastic_password
      
      # Redis configuration
      - CORTEX_REDIS_URI=redis://cortex-redis:6379
      
      # Database configuration
      - CORTEX_DB_URL=jdbc:postgresql://cortex-postgres:5432/cortex
      - CORTEX_DB_USERNAME=cortex
      - CORTEX_DB_PASSWORD_FILE=/run/secrets/postgres_password
      - CORTEX_SECRET_FILE=/run/secrets/cortex_secret
    volumes:
      - cortex_data:/data
      - cortex_logs:/var/log/cortex
      - ./cortex/application.conf:/etc/cortex/application.conf
    networks:
      - cortex_network
      - soc_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9001/api/status"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Using main Elasticsearch service instead of separate Kibana instance
  # cortex-kibana service has been removed to use the main Elasticsearch service

volumes:
  cortex_es_data:
  cortex_redis_data:
  cortex_postgres_data:
  cortex_data:
  cortex_logs:

secrets:
  elastic_username:
    file: ../../docker/secrets/elastic_username
  elastic_password:
    file: ../../docker/secrets/elastic_password
  postgres_user:
    file: ../../docker/secrets/postgres_user
  postgres_password:
    file: ../../docker/secrets/postgres_password
  cassandra_user:
    file: ../../docker/secrets/cassandra_user
  cassandra_password:
    file: ../../docker/secrets/cassandra_password
  cortex_secret:
    file: ../../docker/secrets/cortex_secret
