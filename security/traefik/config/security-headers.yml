http:
  middlewares:
    security-headers:
      headers:
        # Enable browser cross-site scripting (XSS) filter
        browserXssFilter: true
        
        # Prevent MIME type sniffing
        contentTypeNosniff: true
        
        # Force communication using HTTPS
        forceSTSHeader: true
        stsIncludeSubdomains: true
        stsPreload: true
        stsSeconds: 31536000  # 1 year
        
        # Enable X-Frame-Options to prevent clickjacking
        frameDeny: true
        
        # Configure Content Security Policy
        sslRedirect: true
        sslForceHost: true
        sslHost: "${DOMAIN:-example.com}"
        
        # Custom response headers
        customResponseHeaders:
          X-Content-Type-Options: "nosniff"
          X-DNS-Prefetch-Control: "off"
          X-Download-Options: "noopen"
          X-Frame-Options: "SAMEORIGIN"
          X-Permitted-Cross-Domain-Policies: "none"
          X-XSS-Protection: "1; mode=block"
          Referrer-Policy: "strict-origin-when-cross-origin"
          Permissions-Policy: "camera=(), microphone=(), geolocation=(), interest-cohort=()"
          
        # Content Security Policy
        contentSecurityPolicy: |
          default-src 'self';
          script-src 'self' 'unsafe-inline' 'unsafe-eval' https:;
          style-src 'self' 'unsafe-inline' https:;
          img-src 'self' data: https:;
          font-src 'self' https: data:;
          connect-src 'self' https: wss:;
          frame-src 'self';
          object-src 'none';
          base-uri 'self';
          form-action 'self';
          frame-ancestors 'self';
          block-all-mixed-content;
