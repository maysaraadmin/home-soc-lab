services:
  mongodb:
    image: "mongo:${mongodb_image_version}"  
    hostname: mongodb
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    restart: "on-failure"
    ports:
      - "27017:27017"   
    networks:
      - siem-stack
    volumes:
      - "mongodb_data:/data/db"
      - "mongodb_config:/data/configdb"

  datanode:
    image: "graylog/graylog-datanode:${graylog_datanode_image_version}"
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    hostname: "datanode"
    env_file:
      - ../dot.env
    environment:
      GRAYLOG_DATANODE_NODE_ID_FILE: "/var/lib/graylog-datanode/node-id"
      GRAYLOG_DATANODE_OPENSEARCH_HTTP_ENABLE_TLS: "false"
      # GRAYLOG_DATANODE_PASSWORD_SECRET and GRAYLOG_PASSWORD_SECRET MUST be the same value
      GRAYLOG_DATANODE_PASSWORD_SECRET: "${GRAYLOG_PASSWORD_SECRET}"
      GRAYLOG_DATANODE_MONGODB_URI: "mongodb://mongodb:27017/graylog"
    ulimits:
      memlock:
        hard: -1
        soft: -1
      nofile:
        soft: 65536
        hard: 65536
    ports:
      - "8999:8999/tcp"   # DataNode API
      - "9400:9400/tcp"
      - "9300:9300/tcp"
    networks:
      - siem-stack 
    volumes:
      - "graylog-datanode:/var/lib/graylog-datanode"
    restart: "on-failure"

  graylog:
    hostname: "server"
    image: "graylog/graylog:${graylog_image_version}"
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    depends_on:
      mongodb:
        condition: "service_started"
      datanode:
        condition: "service_started"
    entrypoint: "/usr/bin/tini --  /docker-entrypoint.sh"
    env_file:
      - ../dot.env
    environment:
      GRAYLOG_NODE_ID_FILE: "/usr/share/graylog/data/data/node-id"
      # GRAYLOG_DATANODE_PASSWORD_SECRET and GRAYLOG_PASSWORD_SECRET MUST be the same value
      GRAYLOG_PASSWORD_SECRET: "${GRAYLOG_PASSWORD_SECRET}"
      GRAYLOG_ROOT_PASSWORD_SHA2: "${GRAYLOG_ROOT_PASSWORD_SHA2}"
      GRAYLOG_HTTP_BIND_ADDRESS: "0.0.0.0:9000"
      GRAYLOG_HTTP_EXTERNAL_URI: "http://localhost:9000/"
      GRAYLOG_MONGODB_URI: "mongodb://mongodb:27017/graylog"
      # To make reporting (headless_shell) work inside a Docker container
      TZ: "Asia/Kolkata"
      GRAYLOG_ROOT_TIMEZONE: "Asia/Kolkata"
      GRAYLOG_REPORT_DISABLE_SANDBOX: "true"
      # GRAYLOG_ELASTICSEARCH_HOSTS: "https://${INDEXER_USERNAME}:${INDEXER_PASSWORD}@wazuh.indexer:9200"
      GRAYLOG_ELASTICSEARCH_HOSTS: "https://admin:SecretPassword@wazuh.indexer:9200"
      GRAYLOG_SERVER_JAVA_OPTS: "-Dlog4j2.formatMsgNoLookups=true -Djavax.net.ssl.trustStore=/usr/share/graylog/ssl/cacerts -Djavax.net.ssl.trustStorePassword=changeit"

    user: root

    ports:
    - "5044:5044/tcp"   # Beats
    - "5140:5140/tcp"   # Syslog TCP
    - "5140:5140/udp"   # Syslog UDP
    - "5555:5555/tcp"   # RAW TCP
    - "5555:5555/udp"   # RAW UDP
    - "9000:9000/tcp"   # Server API
    - "12201:12201/tcp" # GELF TCP
    - "12201:12201/udp" # GELF UDP
    #- "10000:10000/tcp" # Custom TCP port
    #- "10000:10000/udp" # Custom UDP port
    - "13301:13301/tcp" # Forwarder data
    - "13302:13302/tcp" # Forwarder config
    networks:
      - siem-stack 
    volumes:
      - "graylog_data:/usr/share/graylog/data"
      - ../wazuh/config/wazuh_indexer_ssl_certs/root-ca.pem:/usr/share/graylog/ssl/root-ca.pem
      - ../graylog/graylog-cert.sh:/usr/share/graylog/ssl/graylog-cert.sh
      - ../scripts/output.sh:/usr/share/graylog/ssl/output.sh

    restart: "on-failure"


networks:
  siem-stack:
    external: true

volumes:
  mongodb_data:
  mongodb_config:
  graylog-datanode:
  graylog_data:
